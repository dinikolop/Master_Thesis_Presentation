PREFIX graph2: <https://demo.triply.cc/dimitris/temp/>
PREFIX graph: <https://demo.triply.cc/dimitris/Project/graphs/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX MESH: <http://purl.bioontology.org/ontology/MESH/>
PREFIX pubmed: <https://demo.triply.cc/dimitris/temp/graphs/pubmed/>
PREFIX pubmedDef: <https://example.org/def/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?pmid WHERE {
  # Get all Nijmegen Article/MeSH-Heading pairs
  GRAPH graph:nijmegen-articles {
    ?article pubmedDef:hasMeshHeading ?mh.
  }

  GRAPH graph2:pubmed {
    ?article pubmedDef:isPartOf ?issue .
    ?issue pubmedDef:issuePublishDate ?date .
    FILTER (
      (datatype(?date) = xsd:string && (REGEX(str(?date), "^(2015|2016|2017)") || REGEX(str(?date), " (2015|2016|2017)$"))) ||
      (datatype(?date) = xsd:date && ?date >= "2015-01-01"^^xsd:date && ?date < "2018-01-01"^^xsd:date)
    )
    ?article rdfs:label ?pmid .
    ?article pubmedDef:hasMeshHeading ?mh .
    ?mh pubmedDef:hasDescriptor ?d .
    ?d pubmedDef:meshUI ?ui .
  }

  GRAPH graph:MESH {
    ?mesh skos:notation ?ui .
    ?mesh MESH:MN ?tree .
    FILTER ( STRSTARTS(?tree, "C")  || STRSTARTS(?tree, "D")  || STRSTARTS(?tree, "E")  || STRSTARTS(?tree, "F")  || STRSTARTS(?tree, "N"))
  }

  GRAPH graph:all-mappings {
    ?mesh skos:closeMatch ?icd10 .
  }

  GRAPH graph:ICD10 {
    ?icd10 skos:notation ?icd10_code .
    FILTER(STRSTARTS(STR(?icd10_code), "C81"))
  }
}
